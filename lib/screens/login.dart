import 'dart:convert';
import 'package:bookd/screens/forgot_password.dart';
import 'package:bookd/screens/register.dart';
import 'package:bookd/screens/scheduler.dart';
import 'package:bookd/services/user_details.dart';
import 'package:bookd/widgets/appbar.dart';
import 'package:bookd/widgets/calendar.dart';
import 'package:bookd/widgets/form_field.dart';
import 'package:flutter/material.dart';
import 'package:flutter_svg/svg.dart';
import 'package:bookd/widgets/button.dart';
import 'package:assets_audio_player/assets_audio_player.dart';
import 'package:bookd/services/auth_services.dart';
import 'package:http/http.dart' as http;
import 'package:bookd/provider/login_data.dart';
import 'package:provider/provider.dart';
import 'package:shared_preferences/shared_preferences.dart';

class LoginForm extends StatefulWidget {
  const LoginForm({super.key});

  @override
  State<LoginForm> createState() {
    return _LoginForm();
  }
}

class _LoginForm extends State<LoginForm> {
  final _formKey = GlobalKey<FormState>();
  final AuthService authService = AuthService();
  final UserDetailsService userDetailsService = UserDetailsService();

  var _email = '';
  TextEditingController? emailController = TextEditingController();
  var _password = '';

  void _submit() async {
    final isValid = _formKey.currentState!.validate();

    // AssetsAudioPlayer.newPlayer().open(
    //   Audio("assets/audio/tap.wav"),
    //   autoStart: true,
    // );

    if (!isValid) {
      return;
    }

    _formKey.currentState!.save();

    http.Response res =
        await authService.signinUser(email: _email, password: _password);
    print(res.body);

    if (res.statusCode == 200) {
      http.Response lres = await userDetailsService.getNotify(email: _email);

      // List<dynamic> d = jsonDecode(lres.body);
      // List<Autogenerated> f =
      //     d.map<Autogenerated>(Autogenerated.fromJson).toList();
      Provider.of<FriendProvider>(context, listen: false).setFriend(lres.body);

      SharedPreferences prefs = await SharedPreferences.getInstance();
      Provider.of<UserProvider>(context, listen: false).setUser(res.body);
      await prefs.setString('x-auth-token', jsonDecode(res.body)['token']);
      Navigator.of(context).pushAndRemoveUntil(
          MaterialPageRoute(
            builder: (context) => CalendarSchedule(),
          ),
          (route) => false);
    } else {
      final m = jsonDecode(res.body);
      ScaffoldMessenger.of(context)
          .showSnackBar(SnackBar(content: Text(m['msg'])));
    }

    // Navigator.of(context).push(
    //   MaterialPageRoute(
    //     builder: (context) => const CalendarSchedule(),
    //   ),
    // );
  }

  @override
  Widget build(context) {
    return Scaffold(
      appBar: const PreferredSize(
        preferredSize: Size.fromHeight(50),
        child: TopNavBar(category: 'Login'),
      ),
      body: SingleChildScrollView(
        child: Padding(
          padding: const EdgeInsets.symmetric(horizontal: 20),
          child: Column(
            children: [
              SvgPicture.asset(
                'assets/images/welcome-sign.svg',
                height: 200,
                width: double.infinity,
              ),
              Form(
                key: _formKey,
                child: FormField(
                  builder: (field) {
                    return Column(
                      mainAxisSize: MainAxisSize.max,
                      children: [
                        InputFieldConfig(
                            image: Icons.person,
                            inputVal: 'Email',
                            hide: false,
                            fieldType: null,
                            validation: (value) {
                              if (value == null || value.trim().isEmpty) {
                                return 'Please enter valid Email';
                              }
                              return null;
                            },
                            saved: (newValue) {
                              _email = newValue!;
                            },
                            cont: emailController),
                        const SizedBox(
                          height: 10,
                        ),
                        InputFieldConfig(
                          image: Icons.password,
                          inputVal: 'Password',
                          hide: true,
                          fieldType: null,
                          validation: (value) {
                            if (value == null ||
                                value.trim().isEmpty ||
                                value.trim().length < 6) {
                              return 'Please enter password with atleast 6 characters';
                            }
                            return null;
                          },
                          saved: (newValue) {
                            _password = newValue!;
                          },
                        ),
                        Row(
                          children: [
                            const SizedBox(
                              width: 248,
                            ),
                            TextButtonConfig(
                              buttonVal: "Forgot Password ?",
                              nav: () async {
                                print(emailController!.text);
                                http.Response emailRes =
                                    await authService.forgotPassword(
                                        email: emailController!.text);
                                print(emailRes.body);
                                if (emailRes.statusCode == 200) {
                                  Navigator.of(context).push(
                                    MaterialPageRoute(
                                      builder: (context) {
                                        final user =
                                            Provider.of<UserProvider>(context)
                                                .user;
                                        return ForgotPassword(
                                          email: emailController!.text,
                                        );
                                      },
                                    ),
                                  );
                                }
                              },
                            ),
                          ],
                        ),
                        // const SizedBox(height: 10),
                        ButtonConfig(
                          buttonVal: 'Login',
                          nav: _submit,
                          h: 50.0,
                          w: 200.0,
                        ),
                        const SizedBox(
                          height: 15,
                        ),
                        const Text('------Or continue with------'),
                        const SizedBox(
                          height: 15,
                        ),
                        IconButton(
                          icon: SvgPicture.asset(
                            'assets/images/google.svg',
                          ),
                          onPressed: () {},
                        ),
                        TextButtonConfig(
                          buttonVal: "Don't have an account? Register",
                          nav: () {
                            Navigator.of(context).push(
                              MaterialPageRoute(
                                builder: (context) {
                                  return const RegisterForm();
                                },
                              ),
                            );
                          },
                        ),
                      ],
                    );
                  },
                ),
              ),
            ],
          ),
        ),
      ),
    );
  }
}
